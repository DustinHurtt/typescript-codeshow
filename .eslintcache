[{"D:\\Desktop\\code\\typescript-codeshow\\src\\index.tsx":"1","D:\\Desktop\\code\\typescript-codeshow\\src\\components\\App.tsx":"2","D:\\Desktop\\code\\typescript-codeshow\\src\\components\\code-editor.tsx":"3","D:\\Desktop\\code\\typescript-codeshow\\src\\components\\preview.tsx":"4","D:\\Desktop\\code\\typescript-codeshow\\src\\bundler\\index.ts":"5","D:\\Desktop\\code\\typescript-codeshow\\src\\bundler\\plugins\\unpackage-path-plugin.ts":"6","D:\\Desktop\\code\\typescript-codeshow\\src\\bundler\\plugins\\fetch-plugin.ts":"7","D:\\Desktop\\code\\typescript-codeshow\\src\\components\\code-cell.tsx":"8","D:\\Desktop\\code\\typescript-codeshow\\src\\components\\resizable.tsx":"9"},{"size":499,"mtime":1661871996501,"results":"10","hashOfConfig":"11"},{"size":234,"mtime":1662418495831,"results":"12","hashOfConfig":"11"},{"size":2519,"mtime":1663098603458,"results":"13","hashOfConfig":"11"},{"size":1272,"mtime":1663180863781,"results":"14","hashOfConfig":"11"},{"size":847,"mtime":1663100017218,"results":"15","hashOfConfig":"11"},{"size":846,"mtime":1662331158146,"results":"16","hashOfConfig":"11"},{"size":2136,"mtime":1662331151524,"results":"17","hashOfConfig":"11"},{"size":972,"mtime":1663100881396,"results":"18","hashOfConfig":"11"},{"size":2058,"mtime":1663185294636,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1mcza9w",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Desktop\\code\\typescript-codeshow\\src\\index.tsx",[],["40","41"],"D:\\Desktop\\code\\typescript-codeshow\\src\\components\\App.tsx",[],"D:\\Desktop\\code\\typescript-codeshow\\src\\components\\code-editor.tsx",[],"D:\\Desktop\\code\\typescript-codeshow\\src\\components\\preview.tsx",[],"D:\\Desktop\\code\\typescript-codeshow\\src\\bundler\\index.ts",[],"D:\\Desktop\\code\\typescript-codeshow\\src\\bundler\\plugins\\unpackage-path-plugin.ts",[],"D:\\Desktop\\code\\typescript-codeshow\\src\\bundler\\plugins\\fetch-plugin.ts",[],"D:\\Desktop\\code\\typescript-codeshow\\src\\components\\code-cell.tsx",["42"],"import { useState } from \"react\";\r\nimport CodeEditor from './code-editor';\r\nimport Preview from './preview';\r\nimport bundle from '../bundler';\r\nimport Resizable from \"./resizable\";\r\n\r\nconst CodeCell = () => {\r\n    const [code, setCode] = useState('')\r\n    const [input, setInput] = useState('')\r\n\r\n\r\n    const onClick = async () => {\r\n        const output = await bundle(input);\r\n        setCode(output);\r\n    };\r\n\r\n    return (\r\n            <Resizable direction=\"vertical\">\r\n                <div style={{ height: '100%', display: 'flex', flexDirection: 'row' }}>\r\n                    <Resizable direction=\"horizontal\">\r\n                        <CodeEditor \r\n                        initialValue='const a = 1;'\r\n                        onChange={(value) => setInput(value)}\r\n                        />\r\n                    </Resizable>\r\n                    <Preview code={code} />\r\n                </div>\r\n            </Resizable>\r\n        )\r\n};\r\n\r\nexport default CodeCell","D:\\Desktop\\code\\typescript-codeshow\\src\\components\\resizable.tsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":12,"column":11,"nodeType":"49","messageId":"50","endLine":12,"endColumn":18},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"@typescript-eslint/no-unused-vars","'onClick' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]